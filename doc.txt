BACKEND

- Create a new server using express
- Create routes and controllers 
- Create the MongoDB Database and make the server connect to MongoDB

- Create User Model in MongoDB

AUTH ROUTES
- create signup,login,logout routes
- while signup and login, add a generate token and store the generated token in cookie function using jwt with all security options
- while logout, clear the cookie
- to get current user, create a middleware function to decode the cookie and give the userId.


USER ROUTES
- Add user routes for get user profile, follow, unfollow user
- for follow, unfollow user, use getByIdAndUpdate and push, pull the ids
- create notification model for sending notifications 
- Add Controller for suggested users ( get users excluding current user, already following users) using aggregate method

- Update user controller with different condition checks
- profile and cover images are handles using cloudinary


POST ROUTES
- Add create, delete posts for both mongoDB and cloudinary
- Like/unlike and comment post routes and controllers are created
- get all posts, get liked posts, get following posts, get my posts (all are based on passing the userId)

NOTIFICATION ROUTES
- get all notifications and mark them read true
- delet all notifications route added

FRONTEND

UI
- Used tailwind for styling, daisyui for components 

ROUTES/AUTH CONNECTION
- Added react routers and navigations
- Added react query , usequery, usemutations for signup,login,getMe

POST CONNECTION
- Added react query , usequery, usemutations for posts operations
- Added composabled/hooks for like/unlike and follow/unfollow users

USER CONNECTION
- Added all user operations using react query
- invalidating different queries on operations success

NOTIFICATION CONNECTION
- Added getAll, deleteAll queries and mutation

EXTRAS
- Added posts count in profile page coming from child components for tabs
- Added emoji picker while creating post from emoji mart

DEPLOYMENT
- Add Route Checks in server.js to navigate to index.html of dist
- IMPORTANT: While adding scripts for development/production to set NODE_ENV, don't give white spaces before and after &&
- "start":"set NODE_ENV=production&&node backend/server.js",
